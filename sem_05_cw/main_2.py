# –ó–∞–¥–∞–Ω–∏–µ No2
# üìå –°–æ–∑–¥–∞—Ç—å API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∂–∞–Ω—Ä—É.
#    –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∂–∞–Ω—Ä—É.
# üìå –°–æ–∑–¥–∞–π—Ç–µ –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é.
# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Movie —Å –ø–æ–ª—è–º–∏ id, title, description –∏ genre.
# üìå –°–æ–∑–¥–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ movies –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∏–ª—å–º–æ–≤.
# üìå –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∂–∞–Ω—Ä—É (–º–µ—Ç–æ–¥ GET).
# üìå –†–µ–∞–ª–∏–∑—É–π—Ç–µ –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç–∞.

from enum import Enum
from typing import Optional
from fastapi import FastAPI, HTTPException
import uvicorn
from pydantic import BaseModel

app = FastAPI()


class Genre(Enum):
    horror = '—É–∂–∞—Å'
    fantasy = '—Ñ—ç–Ω—Ç–µ–∑–∏'
    comedy = '–∫–æ–º–µ–¥–∏—è'
    action = '–±–æ–µ–≤–∏–∫'


class Movie(BaseModel):
    id: int
    title: str
    description: Optional[str] = None
    genre: Genre


class MovieIn(BaseModel):
    title: str
    description: Optional[str] = None
    genre: Genre


movies = []


@app.get("/movies/{genre}", response_model=list[Movie])
async def get_movies_by_genre(genre: Genre):
    return list(filter(lambda movie: movie.genre == genre, movies))


@app.post("/movies/", response_model=Movie)
async def add_movies(movie: MovieIn):
    new_movie = Movie(id=len(movies) + 1, title=movie.title, description=movie.description, genre=movie.genre)
    movies.append(new_movie)
    return new_movie


if __name__ == '__main__':
    uvicorn.run(
        "main_2:app",
        host="127.0.0.1",
        port=8000,
        reload=True
    )
